Description: Revert keystone 0.4.0 patch from upstream.
Author: James Page <james.page@ubuntu.com>
Bug: https://bugs.launchpad.net/ceilometer/+bug/1239651
Origin: revert, https://github.com/openstack/ceilometer/commit/c0a3f3cd69eb609216a07111067478f3755cceb4

--- a/etc/ceilometer/ceilometer.conf.sample
+++ b/etc/ceilometer/ceilometer.conf.sample
@@ -742,10 +742,6 @@ connection=sqlite:////var/lib/ceilometer
 # server. (boolean value)
 #http_connect_timeout=<None>
 
-# How many times are we trying to reconnect when communicating
-# with Identity API Server. (integer value)
-#http_request_max_retries=3
-
 # Allows to pass in the name of a fake http_handler callback
 # function used instead of httplib.HTTPConnection or
 # httplib.HTTPSConnection. Useful for unit testing where
@@ -778,13 +774,6 @@ connection=sqlite:////var/lib/ceilometer
 # (string value)
 #keyfile=<None>
 
-# A PEM encoded Certificate Authority to use when verifying
-# HTTPs connections. Defaults to system CAs. (string value)
-#cafile=<None>
-
-# Verify HTTPS connections. (boolean value)
-#insecure=false
-
 # Directory used to cache files related to PKI tokens (string
 # value)
 #signing_dir=<None>
--- a/tests/api/v2/test_acl_scenarios.py
+++ b/tests/api/v2/test_acl_scenarios.py
@@ -27,7 +27,6 @@ from ceilometer import sample
 from ceilometer.api import acl
 from ceilometer.publisher import rpc
 from ceilometer.tests import db as tests_db
-from ceilometer.openstack.common import timeutils
 
 from .base import FunctionalTest
 
@@ -38,8 +37,12 @@ VALID_TOKEN2 = '4562138218392832'
 
 
 class FakeMemcache(object):
-    @staticmethod
-    def get(key):
+    def __init__(self):
+        self.set_key = None
+        self.set_value = None
+        self.token_expiration = None
+
+    def get(self, key):
         if key == "tokens/%s" % VALID_TOKEN:
             dt = datetime.datetime.now() + datetime.timedelta(minutes=5)
             return json.dumps(({'access': {
@@ -52,7 +55,7 @@ class FakeMemcache(object):
                     'roles': [
                         {'name': 'admin'},
                     ]},
-            }}, timeutils.isotime(dt)))
+            }}, dt.strftime("%s")))
         if key == "tokens/%s" % VALID_TOKEN2:
             dt = datetime.datetime.now() + datetime.timedelta(minutes=5)
             return json.dumps(({'access': {
@@ -65,11 +68,11 @@ class FakeMemcache(object):
                     'roles': [
                         {'name': 'Member'},
                     ]},
-            }}, timeutils.isotime(dt)))
+            }}, dt.strftime("%s")))
 
-    @staticmethod
-    def set(key, value, **kwargs):
-        pass
+    def set(self, key, value, **kwargs):
+        self.set_value = value
+        self.set_key = key
 
 
 class TestAPIACL(FunctionalTest,
